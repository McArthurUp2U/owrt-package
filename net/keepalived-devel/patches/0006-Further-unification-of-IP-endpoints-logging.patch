From faf4625d49fc952926bd4e71f11c67acf5ff8ef0 Mon Sep 17 00:00:00 2001
From: Alexey Andriyanov <alan@al-an.info>
Date: Wed, 21 May 2014 13:22:45 +0400
Subject: [PATCH 6/6] Further unification of IP endpoints logging

This change tries to keep usage of the standard "[%s]:%d" format string to a minimum.
Instead, use inet_sockaddrtopair wherever possible.
---
 keepalived/check/check_data.c   | 11 ++----
 keepalived/check/ipwrapper.c    |  5 +--
 keepalived/core/global_parser.c |  2 +-
 keepalived/core/smtp.c          | 82 ++++++++++++++++++++---------------------
 keepalived/include/smtp.h       |  3 +-
 lib/utils.h                     |  2 +
 lib/vty.c                       | 20 ++++------
 7 files changed, 59 insertions(+), 66 deletions(-)

diff --git a/keepalived/check/check_data.c b/keepalived/check/check_data.c
index dd67b6d..5cc2ed8 100644
--- a/keepalived/check/check_data.c
+++ b/keepalived/check/check_data.c
@@ -359,7 +359,6 @@ dump_check_data(check_data_t *data)
 char *
 format_vs (virtual_server_t *vs)
 {
-	static char addr_str[INET6_ADDRSTRLEN + 1];
 	/* alloc large buffer because of unknown length of vs->vsgname */
 	static char ret[512];
 
@@ -369,11 +368,9 @@ format_vs (virtual_server_t *vs)
 			, ntohs(inet_sockaddrport(&vs->addr)));
 	else if (vs->vfwmark)
 		snprintf (ret, sizeof (ret) - 1, "FWM %u", vs->vfwmark);
-	else {
-		inet_sockaddrtos2(&vs->addr, addr_str);
-		snprintf(ret, sizeof(ret) - 1, "[%s]:%d"
-			, addr_str
-			, ntohs(inet_sockaddrport(&vs->addr)));
-	}
+	else
+		snprintf(ret, sizeof(ret) - 1, "%s"
+			, inet_sockaddrtopair(&vs->addr));
+
 	return ret;
 }
diff --git a/keepalived/check/ipwrapper.c b/keepalived/check/ipwrapper.c
index 64f7440..5519a71 100644
--- a/keepalived/check/ipwrapper.c
+++ b/keepalived/check/ipwrapper.c
@@ -511,9 +511,8 @@ clear_diff_vsge(list old, list new, virtual_server_t * old_vs)
 	for (e = LIST_HEAD(old); e; ELEMENT_NEXT(e)) {
 		vsge = ELEMENT_DATA(e);
 		if (!vsge_exist(vsge, new)) {
-			log_message(LOG_INFO, "VS [[%s]:%d:%d:%u] in group %s no longer exist"
-					    , inet_sockaddrtos(&vsge->addr)
-					    , ntohs(inet_sockaddrport(&vsge->addr))
+			log_message(LOG_INFO, "VS [%s:%d:%u] in group %s no longer exist"
+					    , inet_sockaddrtopair(&vsge->addr)
 					    , vsge->range
 					    , vsge->vfwmark
 					    , old_vs->vsgname);
diff --git a/keepalived/core/global_parser.c b/keepalived/core/global_parser.c
index cb613bf..2249858 100644
--- a/keepalived/core/global_parser.c
+++ b/keepalived/core/global_parser.c
@@ -64,7 +64,7 @@ smtpto_handler(vector_t *strvec)
 static void
 smtpip_handler(vector_t *strvec)
 {
-	inet_stosockaddr(vector_slot(strvec, 1), SMTP_PORT_STR, &global_data->smtp_server);
+	inet_stosockaddr(vector_slot(strvec, 1), STR(SMTP_PORT), &global_data->smtp_server);
 }
 static void
 email_handler(vector_t *strvec)
diff --git a/keepalived/core/smtp.c b/keepalived/core/smtp.c
index b6b3c7e..78b7128 100644
--- a/keepalived/core/smtp.c
+++ b/keepalived/core/smtp.c
@@ -96,8 +96,8 @@ connection_error(thread_t * thread)
 {
 	smtp_t *smtp = THREAD_ARG(thread);
 
-	log_message(LOG_INFO, "SMTP connection ERROR to [%s]:%d."
-			    , inet_sockaddrtos(&global_data->smtp_server), SMTP_PORT);
+	log_message(LOG_INFO, "SMTP connection ERROR to %s."
+			    , FMT_SMTP_HOST());
 	free_smtp_all(smtp);
 	return 0;
 }
@@ -106,8 +106,8 @@ connection_timeout(thread_t * thread)
 {
 	smtp_t *smtp = THREAD_ARG(thread);
 
-	log_message(LOG_INFO, "Timeout connecting SMTP server [%s]:%d."
-			    , inet_sockaddrtos(&global_data->smtp_server), SMTP_PORT);
+	log_message(LOG_INFO, "Timeout connecting SMTP server %s."
+			    , FMT_SMTP_HOST());
 	free_smtp_all(smtp);
 	return 0;
 }
@@ -116,8 +116,8 @@ connection_in_progress(thread_t * thread)
 {
 	int status;
 
-	DBG("SMTP connection to [%s]:%d now IN_PROGRESS.",
-	    inet_sockaddrtos(&global_data->smtp_server), SMTP_PORT);
+	DBG("SMTP connection to %s now IN_PROGRESS.",
+	    FMT_SMTP_HOST());
 
 	/*
 	 * Here we use the propriety of a union structure,
@@ -135,8 +135,8 @@ connection_success(thread_t * thread)
 {
 	smtp_t *smtp = THREAD_ARG(thread);
 
-	log_message(LOG_INFO, "Remote SMTP server [%s]:%d connected."
-			    , inet_sockaddrtos(&global_data->smtp_server), SMTP_PORT);
+	log_message(LOG_INFO, "Remote SMTP server %s connected."
+			    , FMT_SMTP_HOST());
 
 	smtp->stage = connect_success;
 	thread_add_read(thread->master, smtp_read_thread, smtp,
@@ -157,8 +157,8 @@ smtp_read_thread(thread_t * thread)
 	smtp = THREAD_ARG(thread);
 
 	if (thread->type == THREAD_READ_TIMEOUT) {
-		log_message(LOG_INFO, "Timeout reading data to remote SMTP server [%s]:%d."
-				    , inet_sockaddrtos(&global_data->smtp_server), SMTP_PORT);
+		log_message(LOG_INFO, "Timeout reading data to remote SMTP server %s."
+				    , FMT_SMTP_HOST());
 		SMTP_FSM_READ(QUIT, thread, 0);
 		return -1;
 	}
@@ -171,17 +171,17 @@ smtp_read_thread(thread_t * thread)
 	if (rcv_buffer_size == -1) {
 		if (errno == EAGAIN)
 			goto end;
-		log_message(LOG_INFO, "Error reading data from remote SMTP server [%s]:%d."
-				    , inet_sockaddrtos(&global_data->smtp_server), SMTP_PORT);
+		log_message(LOG_INFO, "Error reading data from remote SMTP server %s."
+				    , FMT_SMTP_HOST());
 		SMTP_FSM_READ(QUIT, thread, 0);
 		return 0;
 	}
 
 	/* received data overflow buffer size ? */
 	if (smtp->buflen >= SMTP_BUFFER_MAX) {
-		log_message(LOG_INFO, "Received buffer from remote SMTP server [%s]:%d"
+		log_message(LOG_INFO, "Received buffer from remote SMTP server %s"
 				      " overflow our get read buffer length."
-				    , inet_sockaddrtos(&global_data->smtp_server), SMTP_PORT);
+				    , FMT_SMTP_HOST());
 		SMTP_FSM_READ(QUIT, thread, 0);
 		return 0;
 	} else {
@@ -238,8 +238,8 @@ smtp_read_thread(thread_t * thread)
 		thread_add_write(thread->master, smtp_send_thread, smtp,
 				 smtp->fd, global_data->smtp_connection_to);
 	} else {
-		log_message(LOG_INFO, "Can not read data from remote SMTP server [%s]:%d."
-				    , inet_sockaddrtos(&global_data->smtp_server), SMTP_PORT);
+		log_message(LOG_INFO, "Can not read data from remote SMTP server %s."
+				    , FMT_SMTP_HOST());
 		SMTP_FSM_READ(QUIT, thread, 0);
 	}
 
@@ -252,8 +252,8 @@ smtp_send_thread(thread_t * thread)
 	smtp_t *smtp = THREAD_ARG(thread);
 
 	if (thread->type == THREAD_WRITE_TIMEOUT) {
-		log_message(LOG_INFO, "Timeout sending data to remote SMTP server [%s]:%d."
-				    , inet_sockaddrtos(&global_data->smtp_server), SMTP_PORT);
+		log_message(LOG_INFO, "Timeout sending data to remote SMTP server %s."
+				    , FMT_SMTP_HOST());
 		SMTP_FSM_READ(QUIT, thread, 0);
 		return 0;
 	}
@@ -271,9 +271,8 @@ smtp_send_thread(thread_t * thread)
 		thread_add_read(thread->master, smtp_read_thread, smtp,
 				thread->u.fd, global_data->smtp_connection_to);
 	} else {
-		log_message(LOG_INFO, "Can not send data to remote SMTP server [%s]:%d."
-				    , inet_sockaddrtos(&global_data->smtp_server)
-				    , SMTP_PORT);
+		log_message(LOG_INFO, "Can not send data to remote SMTP server %s."
+				    , FMT_SMTP_HOST());
 		SMTP_FSM_READ(QUIT, thread, 0);
 	}
 
@@ -288,10 +287,10 @@ connection_code(thread_t * thread, int status)
 	if (status == 220) {
 		smtp->stage++;
 	} else {
-		log_message(LOG_INFO, "Error connecting SMTP server[%s]:%d."
+		log_message(LOG_INFO, "Error connecting SMTP server %s."
 				      " SMTP status code = %d"
-				    , inet_sockaddrtos(&global_data->smtp_server)
-				    , SMTP_PORT, status);
+				    , FMT_SMTP_HOST()
+				    , status);
 		smtp->stage = ERROR;
 	}
 
@@ -321,10 +320,10 @@ helo_code(thread_t * thread, int status)
 	if (status == 250) {
 		smtp->stage++;
 	} else {
-		log_message(LOG_INFO, "Error processing HELO cmd on SMTP server [%s]:%d."
+		log_message(LOG_INFO, "Error processing HELO cmd on SMTP server %s."
 				      " SMTP status code = %d"
-				    , inet_sockaddrtos(&global_data->smtp_server)
-				    , SMTP_PORT, status);
+				    , FMT_SMTP_HOST()
+				    , status);
 		smtp->stage = ERROR;
 	}
 
@@ -354,10 +353,10 @@ mail_code(thread_t * thread, int status)
 	if (status == 250) {
 		smtp->stage++;
 	} else {
-		log_message(LOG_INFO, "Error processing MAIL cmd on SMTP server [%s]:%d."
+		log_message(LOG_INFO, "Error processing MAIL cmd on SMTP server %s."
 				      " SMTP status code = %d"
-				    , inet_sockaddrtos(&global_data->smtp_server)
-				    , SMTP_PORT, status);
+				    , FMT_SMTP_HOST()
+				    , status);
 		smtp->stage = ERROR;
 	}
 
@@ -399,10 +398,10 @@ rcpt_code(thread_t * thread, int status)
 		if (!fetched_email)
 			smtp->stage++;
 	} else {
-		log_message(LOG_INFO, "Error processing RCPT cmd on SMTP server [%s]:%d."
+		log_message(LOG_INFO, "Error processing RCPT cmd on SMTP server %s."
 				      " SMTP status code = %d"
-				    , inet_sockaddrtos(&global_data->smtp_server)
-				    , SMTP_PORT, status);
+				    , FMT_SMTP_HOST()
+				    , status);
 		smtp->stage = ERROR;
 	}
 
@@ -427,10 +426,10 @@ data_code(thread_t * thread, int status)
 	if (status == 354) {
 		smtp->stage++;
 	} else {
-		log_message(LOG_INFO, "Error processing DATA cmd on SMTP server [%s]:%d."
+		log_message(LOG_INFO, "Error processing DATA cmd on SMTP server %s."
 				      " SMTP status code = %d"
-				    , inet_sockaddrtos(&global_data->smtp_server)
-				    , SMTP_PORT, status);
+				    , FMT_SMTP_HOST()
+				    , status);
 		smtp->stage = ERROR;
 	}
 
@@ -523,10 +522,10 @@ body_code(thread_t * thread, int status)
 		log_message(LOG_INFO, "SMTP alert successfully sent.");
 		smtp->stage++;
 	} else {
-		log_message(LOG_INFO, "Error processing DOT cmd on SMTP server [%s]:%d."
+		log_message(LOG_INFO, "Error processing DOT cmd on SMTP server %s."
 				      " SMTP status code = %d"
-				    , inet_sockaddrtos(&global_data->smtp_server)
-				    , SMTP_PORT, status);
+				    , FMT_SMTP_HOST()
+				    , status);
 		smtp->stage = ERROR;
 	}
 
@@ -592,10 +591,9 @@ smtp_alert(real_server_t * rs, vrrp_t * vrrp,
 
 		/* format subject if rserver is specified */
 		if (rs) {
-			snprintf(smtp->subject, MAX_HEADERS_LENGTH, "[%s] Realserver [%s]:%d - %s"
+			snprintf(smtp->subject, MAX_HEADERS_LENGTH, "[%s] Realserver %s - %s"
 					      , global_data->router_id
-					      , inet_sockaddrtos(&rs->addr)
-					      , ntohs(inet_sockaddrport(&rs->addr))
+					      , FMT_RS(rs)
 					      , subject);
 		} else if (vrrp)
 			snprintf(smtp->subject, MAX_HEADERS_LENGTH, "[%s] VRRP Instance %s - %s"
diff --git a/keepalived/include/smtp.h b/keepalived/include/smtp.h
index 42a41c9..1353787 100644
--- a/keepalived/include/smtp.h
+++ b/keepalived/include/smtp.h
@@ -34,7 +34,6 @@
 #include "vrrp.h"
 
 /* global defs */
-#define SMTP_PORT_STR		"25"
 #define SMTP_PORT		25
 #define SMTP_BUFFER_LENGTH	512
 #define SMTP_BUFFER_MAX		1024
@@ -91,6 +90,8 @@ typedef struct _smtp {
 #define SMTP_SEND_CMD    "\r\n.\r\n"
 #define SMTP_QUIT_CMD    "QUIT\r\n"
 
+#define FMT_SMTP_HOST()	inet_sockaddrtopair(&global_data->smtp_server)
+
 /* Prototypes defs */
 extern void smtp_alert(real_server_t *, vrrp_t *, vrrp_sgroup_t *,
 		       const char *, const char *);
diff --git a/lib/utils.h b/lib/utils.h
index 2b03626..336bb33 100644
--- a/lib/utils.h
+++ b/lib/utils.h
@@ -41,6 +41,8 @@
 #define DBG(fmt, msg...)
 #endif
 
+#define STR(x)  #x
+
 /* global vars exported */
 extern int debug;
 
diff --git a/lib/vty.c b/lib/vty.c
index f1d4dff..d38922a 100644
--- a/lib/vty.c
+++ b/lib/vty.c
@@ -1486,9 +1486,8 @@ vty_listen(struct sockaddr_storage *addr)
 	/* Socket */
 	accept_sock = socket(addr->ss_family, SOCK_STREAM, 0);
 	if (accept_sock < 0) {
-		log_message(LOG_INFO, "Vty error creating listening socket on [%s]:%d (%s)"
-				    , inet_sockaddrtos(addr)
-				    , ntohs(inet_sockaddrport(addr))
+		log_message(LOG_INFO, "Vty error creating listening socket on %s (%s)"
+				    , inet_sockaddrtopair(addr)
 				    , strerror(errno));
 		return -1;
 	}
@@ -1507,9 +1506,8 @@ vty_listen(struct sockaddr_storage *addr)
 	len = sizeof(*addr);
 	ret = bind(accept_sock, (struct sockaddr *) addr, len);
 	if (ret < 0) {
-		log_message(LOG_INFO, "Vty error cant bind to [%s]:%d (%s)"
-				    , inet_sockaddrtos(addr)
-				    , ntohs(inet_sockaddrport(addr))
+		log_message(LOG_INFO, "Vty error cant bind to %s (%s)"
+				    , inet_sockaddrtopair(addr)
 				    , strerror(errno));
 		close(accept_sock);
 		return -1;
@@ -1518,9 +1516,8 @@ vty_listen(struct sockaddr_storage *addr)
 	/* Socket listen */
 	ret = listen(accept_sock, 3);
 	if (ret < 0) {
-		log_message(LOG_INFO, "Vty error cant listen to [%s]:%d (%s)"
-				    , inet_sockaddrtos(addr)
-				    , ntohs(inet_sockaddrport(addr))
+		log_message(LOG_INFO, "Vty error cant listen to %s (%s)"
+				    , inet_sockaddrtopair(addr)
 				    , strerror(errno));
 		close(accept_sock);
 		return -1;
@@ -1530,9 +1527,8 @@ vty_listen(struct sockaddr_storage *addr)
 	/* Restore old mask */
 	umask(old_mask);
 
-	log_message(LOG_INFO, "Vty start listening on [%s]:%d"
-			    , inet_sockaddrtos(addr)
-			    , ntohs(inet_sockaddrport(addr)));
+	log_message(LOG_INFO, "Vty start listening on %s"
+			    , inet_sockaddrtopair(addr));
 
 	vty_event(VTY_SERV, accept_sock, NULL);
 	return accept_sock;
-- 
1.8.3.2

