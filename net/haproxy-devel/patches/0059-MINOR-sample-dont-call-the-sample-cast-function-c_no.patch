From 0e9af557001a5c0b8184135d439ce2b532b8e79a Mon Sep 17 00:00:00 2001
From: Thierry FOURNIER <tfournier@exceliance.fr>
Date: Sat, 14 Dec 2013 14:55:04 +0100
Subject: [PATCH 059/103] MINOR: sample: dont call the sample cast function
 "c_none"

If the cast function to execute is c_none, dont execute it and return
true. The function c_none, do nothing. This save a call.
---
 include/proto/sample.h | 3 +++
 src/sample.c           | 2 +-
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/include/proto/sample.h b/include/proto/sample.h
index b8a1040..db703ef 100644
--- a/include/proto/sample.h
+++ b/include/proto/sample.h
@@ -42,6 +42,7 @@ const char *sample_ckp_names(unsigned int use);
 struct sample_fetch *find_sample_fetch(const char *kw, int len);
 int smp_resolve_args(struct proxy *p);
 int smp_expr_output_type(struct sample_expr *expr);
+int c_none(struct sample *smp);
 
 /*
  * This function just apply a cast on sample. It returns 0 if the cast is not
@@ -53,6 +54,8 @@ int sample_convert(struct sample *sample, int req_type)
 {
 	if (!sample_casts[sample->type][req_type])
 		return 0;
+	if (sample_casts[sample->type][req_type] == c_none)
+		return 1;
 	return sample_casts[sample->type][req_type](sample);
 }
 
diff --git a/src/sample.c b/src/sample.c
index f57811e..7568d27 100644
--- a/src/sample.c
+++ b/src/sample.c
@@ -559,7 +559,7 @@ static int c_bindup(struct sample *smp)
 }
 
 
-static int c_none(struct sample *smp)
+int c_none(struct sample *smp)
 {
 	return 1;
 }
-- 
1.8.3.2

