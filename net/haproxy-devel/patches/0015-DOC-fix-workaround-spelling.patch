From e8921f8cd797f3f3199dcd3aea46cf5953749b6d Mon Sep 17 00:00:00 2001
From: Willy Tarreau <w@1wt.eu>
Date: Fri, 15 Jan 2016 10:26:26 +0100
Subject: [PATCH 15/28] DOC: fix "workaround" spelling

"a workaround", "to work around", and not "to walk around".
Thanks to Lukas for reporting.
(cherry picked from commit 989222acff9312ae8dce34c3ae6000e15a3dc224)
---
 doc/architecture.txt  | 4 ++--
 doc/configuration.txt | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/doc/architecture.txt b/doc/architecture.txt
index 12dda8d..0c26038 100644
--- a/doc/architecture.txt
+++ b/doc/architecture.txt
@@ -472,7 +472,7 @@ dead. Of course, you can simply enable TCP health-checks, but it sometimes
 happens that intermediate firewalls between the proxies and the remote servers
 acknowledge the TCP connection themselves, showing an always-up server. Since
 this is generally encountered on long-distance communications, which often
-involve SSL, an SSL health-check has been implemented to workaround this issue.
+involve SSL, an SSL health-check has been implemented to work around this issue.
 It sends SSL Hello messages to the remote server, which in turns replies with
 SSL Hello messages. Setting it up is very easy :
 
@@ -1307,7 +1307,7 @@ persistent connections per user).
 
 Even if you disable keep-alive, if the server takes a long time to respond,
 you still have a high risk of multiple users clicking at the same time and
-having their requests unserved because of server saturation. To walk around
+having their requests unserved because of server saturation. To work around
 the problem, you increase the concurrent connection limit on the servers,
 but their performance stalls under higher loads.
 
diff --git a/doc/configuration.txt b/doc/configuration.txt
index 5091bef..c5eb50f 100644
--- a/doc/configuration.txt
+++ b/doc/configuration.txt
@@ -2918,7 +2918,7 @@ errorfile <code> <file>
 
   Example :
         errorfile 400 /etc/haproxy/errorfiles/400badreq.http
-        errorfile 408 /dev/null  # workaround Chrome pre-connect bug
+        errorfile 408 /dev/null  # work around Chrome pre-connect bug
         errorfile 403 /etc/haproxy/errorfiles/403forbid.http
         errorfile 503 /etc/haproxy/errorfiles/503sorry.http
 
@@ -2948,7 +2948,7 @@ errorloc302 <code> <url>
   client to fetch the designated URL using the same HTTP method. This can be
   quite problematic in case of non-GET methods such as POST, because the URL
   sent to the client might not be allowed for something other than GET. To
-  workaround this problem, please use "errorloc303" which send the HTTP 303
+  work around this problem, please use "errorloc303" which send the HTTP 303
   status code, indicating to the client that the URL must be fetched with a GET
   request.
 
@@ -10067,7 +10067,7 @@ agent-check
   parameter. Warning though, it is not a good idea to stop an agent after it
   reports "down", since only an agent reporting "up" will be able to turn the
   server up again. Note that the CLI on the Unix stats socket is also able to
-  force an agent's result in order to workaround a bogus agent if needed.
+  force an agent's result in order to work around a bogus agent if needed.
 
   Requires the "agent-port" parameter to be set. See also the "agent-inter"
   parameter.
-- 
2.4.10

