From 6bd426cf35c95985712369ed528c10a5f80ad8fd Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Cyril=20Bont=C3=A9?= <cyril.bonte@free.fr>
Date: Thu, 26 Nov 2015 21:39:56 +0100
Subject: [PATCH 19/19] BUG/MEDIUM: sample: urlp can't match an empty value

Currently urlp fetching samples were able to find parameters with an empty
value, but the return code depended on the value length. The final result was
that acls using urlp couldn't match empty values.

Example of acl which always returned "false":
  acl MATCH_EMPTY urlp(foo) -m len 0

The fix consists in unconditionally return 1 when the parameter is found.

This fix must be backported to 1.6 and 1.5.
(cherry picked from commit ce1ef4df0135f9dc1cb6691395eacb487015fe3e)
---
 src/proto_http.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/src/proto_http.c b/src/proto_http.c
index 67e482f..1d00071 100644
--- a/src/proto_http.c
+++ b/src/proto_http.c
@@ -11578,10 +11578,11 @@ find_url_param_pos(const char **chunks,
 }
 
 /*
- * Given a url parameter name and a query string, returns its value and size
- * into *value and *value_l respectively, and returns non-zero. An empty
- * url_param_name matches the first available parameter. If the parameter is
- * not found, zero is returned and value/value_l are not touched.
+ * Given a url parameter name and a query string, find the next value.
+ * An empty url_param_name matches the first available parameter.
+ * If the parameter is found, 1 is returned and *vstart / *vend are updated to
+ * respectively provide a pointer to the value and its end.
+ * Otherwise, 0 is returned and vstart/vend are not modified.
  */
 static int
 find_next_url_param(const char **chunks,
@@ -11660,7 +11661,7 @@ find_next_url_param(const char **chunks,
 
 	*vstart = value_start;
 	*vend = value_end;
-	return value_end != value_start;
+	return 1;
 }
 
 /* This scans a URL-encoded query string. It takes an optionally wrapping
-- 
2.4.10

