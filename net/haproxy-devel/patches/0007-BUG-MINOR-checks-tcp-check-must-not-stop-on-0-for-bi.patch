From ec6b012bf4e4157c14e474db0a85e80f7e618b94 Mon Sep 17 00:00:00 2001
From: Willy Tarreau <w@1wt.eu>
Date: Tue, 13 May 2014 17:57:29 +0200
Subject: [PATCH 07/14] BUG/MINOR: checks: tcp-check must not stop on '\0' for
 binary checks

Abuse of copy-paste has made "tcp-check expect binary" to consider a
buffer starting with \0 as empty! Thanks to Lukas Benes for reporting
this problem and confirming the fix.

This is 1.5-only, no backport is needed.
---
 src/checks.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/src/checks.c b/src/checks.c
index 5eb5a76..b94ff62 100644
--- a/src/checks.c
+++ b/src/checks.c
@@ -1975,7 +1975,6 @@ static int tcpcheck_get_step_id(struct server *s)
 static void tcpcheck_main(struct connection *conn)
 {
 	char *contentptr;
-	unsigned int contentlen;
 	struct list *head = NULL;
 	struct tcpcheck_rule *cur = NULL;
 	int done = 0, ret = 0;
@@ -2253,10 +2252,9 @@ static void tcpcheck_main(struct connection *conn)
 			}
 
 			contentptr = check->bi->data;
-			contentlen = check->bi->i;
 
 			/* Check that response body is not empty... */
-			if (*contentptr == '\0') {
+			if (!check->bi->i) {
 				if (!done)
 					continue;
 
@@ -2273,7 +2271,7 @@ static void tcpcheck_main(struct connection *conn)
 
 		tcpcheck_expect:
 			if (cur->string != NULL)
-				ret = my_memmem(contentptr, contentlen, cur->string, cur->string_len) != NULL;
+				ret = my_memmem(contentptr, check->bi->i, cur->string, cur->string_len) != NULL;
 			else if (cur->expect_regex != NULL)
 				ret = regexec(cur->expect_regex, contentptr, MAX_MATCH, pmatch, 0) == 0;
 
-- 
1.8.3.2

